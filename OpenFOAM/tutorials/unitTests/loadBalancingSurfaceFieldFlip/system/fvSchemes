/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Website:  https://openfoam.org Version:  2.1.x                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      fvSchemes;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

ddtSchemes
{
    default         Euler; //CrankNicolson 1.;
    "ddt(alpha.*)"  Euler;
}

gradSchemes
{
//    default         Gauss linear; //leastSquares;
//    "ddt(alpha.*)"  Gauss linear;
        default         leastSquares;
}

divSchemes
{
//    div(rhoPhi,U)  Gauss GammaV 0.2;
//    div(phi,alpha)  Gauss vanLeer;
//    div(phirb,alpha) Gauss interfaceCompression; //linear;
//    div((muEff*dev(T(grad(U))))) Gauss linear;
//    div(((rho*nuEff)*dev2(T(grad(U))))) Gauss linear;

    div(rhoPhi,U)  Gauss skewCorrected linearUpwind grad(U);
    div(rho*phi,U)  Gauss skewCorrected linearUpwind grad(U);
    div(phi,alpha)  Gauss vanLeer;
    div(phirb,alpha) Gauss interfaceCompression;
    div((muEff*dev(T(grad(U))))) Gauss linear;
    div(((rho*nuEff)*dev2(T(grad(U))))) Gauss linear;
}

laplacianSchemes
{
//    default         Gauss linear uncorrected;
    default         Gauss skewCorrected linear corrected;
}

interpolationSchemes
{
    default         linear;

}

snGradSchemes
{
//    default         uncorrected;
    default         corrected;
}

fluxRequired
{
    default         no;
    p_rgh;
    pcorr;
    alpha.water;
}


// ************************************************************************* //
